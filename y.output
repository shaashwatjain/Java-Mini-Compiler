Grammar

    0 $accept: CompilationUnit $end

    1 CompilationUnit: ImportDec CompilationUnit
    2                | ClassDec

    3 ImportDec: T_IMPORT T_ID '.' T_ID '.' '*' ';'

    4 ClassDec: Modifier T_CLASS T_ID '{' ClassBody '}'

    5 ClassBody: GlobVarDec ClassBody
    6          | MethodDec ClassBody
    7          | %empty

    8 GlobVarDec: Modifier VarDec

    9 MethodDec: Modifier Type T_ID '(' Params ')' Block
   10          | Modifier T_VOID T_ID '(' Params ')' Block

   11 Modifier: T_PUBLIC Modifier1
   12         | T_PRIVATE Modifier1
   13         | T_PROTECTED Modifier1
   14         | Modifier1

   15 Modifier1: T_STATIC Modifier
   16          | Modifier2

   17 Modifier2: T_FINAL
   18          | %empty

   19 Params: ParamList

   20 ParamList: Type T_ID
   21          | Type T_ID ',' Params
   22          | %empty

   23 Block: '{' Statement '}'

   24 Statement: Assign Statement

   25 $@1: %empty

   26 Statement: T_BREAK ';' $@1 Statement

   27 $@2: %empty

   28 Statement: T_CONTINUE ';' $@2 Statement

   29 $@3: %empty

   30 $@4: %empty

   31 $@5: %empty

   32 $@6: %empty

   33 $@7: %empty

   34 Statement: T_FOR '(' $@3 VarDec $@4 Expression $@5 ';' Expression $@6 ')' Block $@7 Statement
   35          | T_RETURN Expression ';' Statement

   36 $@8: %empty

   37 $@9: %empty

   38 Statement: T_SWITCH '(' Expression $@8 ')' '{' SwitchBlock '}' $@9 Statement
   39          | VarDec Statement
   40          | ArrDec Statement
   41          | ArrInit Statement
   42          | %empty

   43 @10: %empty

   44 $@11: %empty

   45 SwitchBlock: SwitchLabel @10 ':' Statement $@11 SwitchBlock
   46            | %empty

   47 SwitchLabel: T_CASE Expression
   48            | T_DEFAULT

   49 VarDec: Type T_ID '=' Expression DecIdenList ';'
   50       | Type T_ID DecIdenList ';'

   51 DecIdenList: ',' T_ID '=' Expression DecIdenList
   52            | ',' T_ID DecIdenList
   53            | %empty

   54 ArrDec: Type T_ID '[' ']' ArrList ';'
   55       | T_ID '[' ']' '[' ']' ArrList
   56       | T_ID ArrList

   57 ArrList: ',' T_ID '[' ']'
   58        | ',' T_ID '[' ']' '[' ']'
   59        | ',' T_ID
   60        | %empty

   61 ArrInit: Type T_ID '[' ']' '=' T_NEW Type '[' Expression ']' ';'
   62        | Type T_ID '[' ']' '[' ']' '=' T_NEW Type '[' Expression ']' '[' Expression ']' ';'
   63        | Type '[' ']' T_ID '=' T_NEW Type '[' Expression ']' ';'
   64        | Type '[' ']' '[' ']' T_ID '=' T_NEW Type '[' Expression ']' '[' Expression ']' ';'

   65 ArrExp: T_ID '[' Expression ']'
   66       | T_ID '[' Expression ']' '[' Expression ']'
   67       | T_ID

   68 Type: T_INT
   69     | T_DOUBLE
   70     | T_CHAR

   71 Assign: ArrExp AssignOp Expression ';'

   72 AssignOp: '='
   73         | T_SHORTHANDADD
   74         | T_SHORTHANDSUB
   75         | T_SHORTHANDMUL
   76         | T_SHORTHANDDIV
   77         | T_SHORTHANDAND
   78         | T_SHORTHANDORE
   79         | T_SHORTHANDCAR
   80         | T_SHORTHANDMOD

   81 InfixOp: '|'
   82        | '^'
   83        | '&'
   84        | '+'
   85        | '-'
   86        | '*'
   87        | '/'
   88        | '%'

   89 InfixOp1: T_OROR
   90         | T_ANDAND
   91         | T_EQCOMP
   92         | T_NOTEQUAL
   93         | '<'
   94         | '>'
   95         | T_LESSEREQ
   96         | T_GREATEREQ
   97         | T_LEFTSHIFT
   98         | T_RIGHTSHIFT

   99 PrefixOp: T_INC
  100         | T_DEC
  101         | '!'
  102         | '~'
  103         | '+'
  104         | '-'

  105 PostfixOp: T_INC
  106          | T_DEC

  107 Expression: Expr
  108           | Expr InfixOp Expression
  109           | Expr InfixOp1 Expression

  110 Expr: PrefixOp Epr
  111     | Epr
  112     | Epr PostfixOp
  113     | PrefixOp Epr PostfixOp

  114 Epr: '(' Expression ')'
  115    | ArrExp
  116    | T_NUM


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 101
    '%' (37) 88
    '&' (38) 83
    '(' (40) 9 10 34 38 114
    ')' (41) 9 10 34 38 114
    '*' (42) 3 86
    '+' (43) 84 103
    ',' (44) 21 51 52 57 58 59
    '-' (45) 85 104
    '.' (46) 3
    '/' (47) 87
    ':' (58) 45
    ';' (59) 3 26 28 34 35 49 50 54 61 62 63 64 71
    '<' (60) 93
    '=' (61) 49 51 61 62 63 64 72
    '>' (62) 94
    '[' (91) 54 55 57 58 61 62 63 64 65 66
    ']' (93) 54 55 57 58 61 62 63 64 65 66
    '^' (94) 82
    '{' (123) 4 23 38
    '|' (124) 81
    '}' (125) 4 23 38
    '~' (126) 102
    error (256)
    T_IMPORT (258) 3
    T_CLASS (259) 4
    T_PUBLIC (260) 11
    T_PRIVATE (261) 12
    T_PROTECTED (262) 13
    T_STATIC (263) 15
    T_FINAL (264) 17
    T_VOID (265) 10
    T_INT (266) 68
    T_CHAR (267) 70
    T_DOUBLE (268) 69
    T_FOR (269) 34
    T_SWITCH (270) 38
    T_CASE (271) 47
    T_DEFAULT (272) 48
    T_BREAK (273) 26
    T_CONTINUE (274) 28
    T_RETURN (275) 35
    T_NEW (276) 61 62 63 64
    T_INC (277) 99 105
    T_DEC (278) 100 106
    T_SHORTHANDADD (279) 73
    T_SHORTHANDSUB (280) 74
    T_SHORTHANDMUL (281) 75
    T_SHORTHANDDIV (282) 76
    T_SHORTHANDAND (283) 77
    T_SHORTHANDORE (284) 78
    T_SHORTHANDCAR (285) 79
    T_SHORTHANDMOD (286) 80
    T_OROR (287) 89
    T_ANDAND (288) 90
    T_EQCOMP (289) 91
    T_NOTEQUAL (290) 92
    T_GREATEREQ (291) 96
    T_LESSEREQ (292) 95
    T_LEFTSHIFT (293) 97
    T_RIGHTSHIFT (294) 98
    T_NUM (295) 116
    T_ID (296) 3 4 9 10 20 21 49 50 51 52 54 55 56 57 58 59 61 62 63 64 65 66 67


Nonterminals, with rules where they appear

    $accept (65)
        on left: 0
    CompilationUnit (66)
        on left: 1 2
        on right: 0 1
    ImportDec (67)
        on left: 3
        on right: 1
    ClassDec (68)
        on left: 4
        on right: 2
    ClassBody (69)
        on left: 5 6 7
        on right: 4 5 6
    GlobVarDec (70)
        on left: 8
        on right: 5
    MethodDec (71)
        on left: 9 10
        on right: 6
    Modifier (72)
        on left: 11 12 13 14
        on right: 4 8 9 10 15
    Modifier1 (73)
        on left: 15 16
        on right: 11 12 13 14
    Modifier2 (74)
        on left: 17 18
        on right: 16
    Params (75)
        on left: 19
        on right: 9 10 21
    ParamList (76)
        on left: 20 21 22
        on right: 19
    Block (77)
        on left: 23
        on right: 9 10 34
    Statement (78)
        on left: 24 26 28 34 35 38 39 40 41 42
        on right: 23 24 26 28 34 35 38 39 40 41 45
    $@1 (79)
        on left: 25
        on right: 26
    $@2 (80)
        on left: 27
        on right: 28
    $@3 (81)
        on left: 29
        on right: 34
    $@4 (82)
        on left: 30
        on right: 34
    $@5 (83)
        on left: 31
        on right: 34
    $@6 (84)
        on left: 32
        on right: 34
    $@7 (85)
        on left: 33
        on right: 34
    $@8 (86)
        on left: 36
        on right: 38
    $@9 (87)
        on left: 37
        on right: 38
    SwitchBlock (88)
        on left: 45 46
        on right: 38 45
    @10 (89)
        on left: 43
        on right: 45
    $@11 (90)
        on left: 44
        on right: 45
    SwitchLabel (91)
        on left: 47 48
        on right: 45
    VarDec (92)
        on left: 49 50
        on right: 8 34 39
    DecIdenList (93)
        on left: 51 52 53
        on right: 49 50 51 52
    ArrDec (94)
        on left: 54 55 56
        on right: 40
    ArrList (95)
        on left: 57 58 59 60
        on right: 54 55 56
    ArrInit (96)
        on left: 61 62 63 64
        on right: 41
    ArrExp (97)
        on left: 65 66 67
        on right: 71 115
    Type (98)
        on left: 68 69 70
        on right: 9 20 21 49 50 54 61 62 63 64
    Assign (99)
        on left: 71
        on right: 24
    AssignOp (100)
        on left: 72 73 74 75 76 77 78 79 80
        on right: 71
    InfixOp (101)
        on left: 81 82 83 84 85 86 87 88
        on right: 108
    InfixOp1 (102)
        on left: 89 90 91 92 93 94 95 96 97 98
        on right: 109
    PrefixOp (103)
        on left: 99 100 101 102 103 104
        on right: 110 113
    PostfixOp (104)
        on left: 105 106
        on right: 112 113
    Expression (105)
        on left: 107 108 109
        on right: 34 35 38 47 49 51 61 62 63 64 65 66 71 108 109 114
    Expr (106)
        on left: 110 111 112 113
        on right: 107 108 109
    Epr (107)
        on left: 114 115 116
        on right: 110 111 112 113


State 0

    0 $accept: . CompilationUnit $end

    T_IMPORT     shift, and go to state 1
    T_PUBLIC     shift, and go to state 2
    T_PRIVATE    shift, and go to state 3
    T_PROTECTED  shift, and go to state 4
    T_STATIC     shift, and go to state 5
    T_FINAL      shift, and go to state 6

    $default  reduce using rule 18 (Modifier2)

    CompilationUnit  go to state 7
    ImportDec        go to state 8
    ClassDec         go to state 9
    Modifier         go to state 10
    Modifier1        go to state 11
    Modifier2        go to state 12


State 1

    3 ImportDec: T_IMPORT . T_ID '.' T_ID '.' '*' ';'

    T_ID  shift, and go to state 13


State 2

   11 Modifier: T_PUBLIC . Modifier1

    T_STATIC  shift, and go to state 5
    T_FINAL   shift, and go to state 6

    $default  reduce using rule 18 (Modifier2)

    Modifier1  go to state 14
    Modifier2  go to state 12


State 3

   12 Modifier: T_PRIVATE . Modifier1

    T_STATIC  shift, and go to state 5
    T_FINAL   shift, and go to state 6

    $default  reduce using rule 18 (Modifier2)

    Modifier1  go to state 15
    Modifier2  go to state 12


State 4

   13 Modifier: T_PROTECTED . Modifier1

    T_STATIC  shift, and go to state 5
    T_FINAL   shift, and go to state 6

    $default  reduce using rule 18 (Modifier2)

    Modifier1  go to state 16
    Modifier2  go to state 12


State 5

   15 Modifier1: T_STATIC . Modifier

    T_PUBLIC     shift, and go to state 2
    T_PRIVATE    shift, and go to state 3
    T_PROTECTED  shift, and go to state 4
    T_STATIC     shift, and go to state 5
    T_FINAL      shift, and go to state 6

    $default  reduce using rule 18 (Modifier2)

    Modifier   go to state 17
    Modifier1  go to state 11
    Modifier2  go to state 12


State 6

   17 Modifier2: T_FINAL .

    $default  reduce using rule 17 (Modifier2)


State 7

    0 $accept: CompilationUnit . $end

    $end  shift, and go to state 18


State 8

    1 CompilationUnit: ImportDec . CompilationUnit

    T_IMPORT     shift, and go to state 1
    T_PUBLIC     shift, and go to state 2
    T_PRIVATE    shift, and go to state 3
    T_PROTECTED  shift, and go to state 4
    T_STATIC     shift, and go to state 5
    T_FINAL      shift, and go to state 6

    $default  reduce using rule 18 (Modifier2)

    CompilationUnit  go to state 19
    ImportDec        go to state 8
    ClassDec         go to state 9
    Modifier         go to state 10
    Modifier1        go to state 11
    Modifier2        go to state 12


State 9

    2 CompilationUnit: ClassDec .

    $default  reduce using rule 2 (CompilationUnit)


State 10

    4 ClassDec: Modifier . T_CLASS T_ID '{' ClassBody '}'

    T_CLASS  shift, and go to state 20


State 11

   14 Modifier: Modifier1 .

    $default  reduce using rule 14 (Modifier)


State 12

   16 Modifier1: Modifier2 .

    $default  reduce using rule 16 (Modifier1)


State 13

    3 ImportDec: T_IMPORT T_ID . '.' T_ID '.' '*' ';'

    '.'  shift, and go to state 21


State 14

   11 Modifier: T_PUBLIC Modifier1 .

    $default  reduce using rule 11 (Modifier)


State 15

   12 Modifier: T_PRIVATE Modifier1 .

    $default  reduce using rule 12 (Modifier)


State 16

   13 Modifier: T_PROTECTED Modifier1 .

    $default  reduce using rule 13 (Modifier)


State 17

   15 Modifier1: T_STATIC Modifier .

    $default  reduce using rule 15 (Modifier1)


State 18

    0 $accept: CompilationUnit $end .

    $default  accept


State 19

    1 CompilationUnit: ImportDec CompilationUnit .

    $default  reduce using rule 1 (CompilationUnit)


State 20

    4 ClassDec: Modifier T_CLASS . T_ID '{' ClassBody '}'

    T_ID  shift, and go to state 22


State 21

    3 ImportDec: T_IMPORT T_ID '.' . T_ID '.' '*' ';'

    T_ID  shift, and go to state 23


State 22

    4 ClassDec: Modifier T_CLASS T_ID . '{' ClassBody '}'

    '{'  shift, and go to state 24


State 23

    3 ImportDec: T_IMPORT T_ID '.' T_ID . '.' '*' ';'

    '.'  shift, and go to state 25


State 24

    4 ClassDec: Modifier T_CLASS T_ID '{' . ClassBody '}'

    T_PUBLIC     shift, and go to state 2
    T_PRIVATE    shift, and go to state 3
    T_PROTECTED  shift, and go to state 4
    T_STATIC     shift, and go to state 5
    T_FINAL      shift, and go to state 6

    '}'       reduce using rule 7 (ClassBody)
    $default  reduce using rule 18 (Modifier2)

    ClassBody   go to state 26
    GlobVarDec  go to state 27
    MethodDec   go to state 28
    Modifier    go to state 29
    Modifier1   go to state 11
    Modifier2   go to state 12


State 25

    3 ImportDec: T_IMPORT T_ID '.' T_ID '.' . '*' ';'

    '*'  shift, and go to state 30


State 26

    4 ClassDec: Modifier T_CLASS T_ID '{' ClassBody . '}'

    '}'  shift, and go to state 31


State 27

    5 ClassBody: GlobVarDec . ClassBody

    T_PUBLIC     shift, and go to state 2
    T_PRIVATE    shift, and go to state 3
    T_PROTECTED  shift, and go to state 4
    T_STATIC     shift, and go to state 5
    T_FINAL      shift, and go to state 6

    '}'       reduce using rule 7 (ClassBody)
    $default  reduce using rule 18 (Modifier2)

    ClassBody   go to state 32
    GlobVarDec  go to state 27
    MethodDec   go to state 28
    Modifier    go to state 29
    Modifier1   go to state 11
    Modifier2   go to state 12


State 28

    6 ClassBody: MethodDec . ClassBody

    T_PUBLIC     shift, and go to state 2
    T_PRIVATE    shift, and go to state 3
    T_PROTECTED  shift, and go to state 4
    T_STATIC     shift, and go to state 5
    T_FINAL      shift, and go to state 6

    '}'       reduce using rule 7 (ClassBody)
    $default  reduce using rule 18 (Modifier2)

    ClassBody   go to state 33
    GlobVarDec  go to state 27
    MethodDec   go to state 28
    Modifier    go to state 29
    Modifier1   go to state 11
    Modifier2   go to state 12


State 29

    8 GlobVarDec: Modifier . VarDec
    9 MethodDec: Modifier . Type T_ID '(' Params ')' Block
   10          | Modifier . T_VOID T_ID '(' Params ')' Block

    T_VOID    shift, and go to state 34
    T_INT     shift, and go to state 35
    T_CHAR    shift, and go to state 36
    T_DOUBLE  shift, and go to state 37

    VarDec  go to state 38
    Type    go to state 39


State 30

    3 ImportDec: T_IMPORT T_ID '.' T_ID '.' '*' . ';'

    ';'  shift, and go to state 40


State 31

    4 ClassDec: Modifier T_CLASS T_ID '{' ClassBody '}' .

    $default  reduce using rule 4 (ClassDec)


State 32

    5 ClassBody: GlobVarDec ClassBody .

    $default  reduce using rule 5 (ClassBody)


State 33

    6 ClassBody: MethodDec ClassBody .

    $default  reduce using rule 6 (ClassBody)


State 34

   10 MethodDec: Modifier T_VOID . T_ID '(' Params ')' Block

    T_ID  shift, and go to state 41


State 35

   68 Type: T_INT .

    $default  reduce using rule 68 (Type)


State 36

   70 Type: T_CHAR .

    $default  reduce using rule 70 (Type)


State 37

   69 Type: T_DOUBLE .

    $default  reduce using rule 69 (Type)


State 38

    8 GlobVarDec: Modifier VarDec .

    $default  reduce using rule 8 (GlobVarDec)


State 39

    9 MethodDec: Modifier Type . T_ID '(' Params ')' Block
   49 VarDec: Type . T_ID '=' Expression DecIdenList ';'
   50       | Type . T_ID DecIdenList ';'

    T_ID  shift, and go to state 42


State 40

    3 ImportDec: T_IMPORT T_ID '.' T_ID '.' '*' ';' .

    $default  reduce using rule 3 (ImportDec)


State 41

   10 MethodDec: Modifier T_VOID T_ID . '(' Params ')' Block

    '('  shift, and go to state 43


State 42

    9 MethodDec: Modifier Type T_ID . '(' Params ')' Block
   49 VarDec: Type T_ID . '=' Expression DecIdenList ';'
   50       | Type T_ID . DecIdenList ';'

    '('  shift, and go to state 44
    ','  shift, and go to state 45
    '='  shift, and go to state 46

    $default  reduce using rule 53 (DecIdenList)

    DecIdenList  go to state 47


State 43

   10 MethodDec: Modifier T_VOID T_ID '(' . Params ')' Block

    T_INT     shift, and go to state 35
    T_CHAR    shift, and go to state 36
    T_DOUBLE  shift, and go to state 37

    $default  reduce using rule 22 (ParamList)

    Params     go to state 48
    ParamList  go to state 49
    Type       go to state 50


State 44

    9 MethodDec: Modifier Type T_ID '(' . Params ')' Block

    T_INT     shift, and go to state 35
    T_CHAR    shift, and go to state 36
    T_DOUBLE  shift, and go to state 37

    $default  reduce using rule 22 (ParamList)

    Params     go to state 51
    ParamList  go to state 49
    Type       go to state 50


State 45

   51 DecIdenList: ',' . T_ID '=' Expression DecIdenList
   52            | ',' . T_ID DecIdenList

    T_ID  shift, and go to state 52


State 46

   49 VarDec: Type T_ID '=' . Expression DecIdenList ';'

    T_INC  shift, and go to state 53
    T_DEC  shift, and go to state 54
    T_NUM  shift, and go to state 55
    T_ID   shift, and go to state 56
    '('    shift, and go to state 57
    '+'    shift, and go to state 58
    '-'    shift, and go to state 59
    '!'    shift, and go to state 60
    '~'    shift, and go to state 61

    ArrExp      go to state 62
    PrefixOp    go to state 63
    Expression  go to state 64
    Expr        go to state 65
    Epr         go to state 66


State 47

   50 VarDec: Type T_ID DecIdenList . ';'

    ';'  shift, and go to state 67


State 48

   10 MethodDec: Modifier T_VOID T_ID '(' Params . ')' Block

    ')'  shift, and go to state 68


State 49

   19 Params: ParamList .

    $default  reduce using rule 19 (Params)


State 50

   20 ParamList: Type . T_ID
   21          | Type . T_ID ',' Params

    T_ID  shift, and go to state 69


State 51

    9 MethodDec: Modifier Type T_ID '(' Params . ')' Block

    ')'  shift, and go to state 70


State 52

   51 DecIdenList: ',' T_ID . '=' Expression DecIdenList
   52            | ',' T_ID . DecIdenList

    ','  shift, and go to state 45
    '='  shift, and go to state 71

    $default  reduce using rule 53 (DecIdenList)

    DecIdenList  go to state 72


State 53

   99 PrefixOp: T_INC .

    $default  reduce using rule 99 (PrefixOp)


State 54

  100 PrefixOp: T_DEC .

    $default  reduce using rule 100 (PrefixOp)


State 55

  116 Epr: T_NUM .

    $default  reduce using rule 116 (Epr)


State 56

   65 ArrExp: T_ID . '[' Expression ']'
   66       | T_ID . '[' Expression ']' '[' Expression ']'
   67       | T_ID .

    '['  shift, and go to state 73

    $default  reduce using rule 67 (ArrExp)


State 57

  114 Epr: '(' . Expression ')'

    T_INC  shift, and go to state 53
    T_DEC  shift, and go to state 54
    T_NUM  shift, and go to state 55
    T_ID   shift, and go to state 56
    '('    shift, and go to state 57
    '+'    shift, and go to state 58
    '-'    shift, and go to state 59
    '!'    shift, and go to state 60
    '~'    shift, and go to state 61

    ArrExp      go to state 62
    PrefixOp    go to state 63
    Expression  go to state 74
    Expr        go to state 65
    Epr         go to state 66


State 58

  103 PrefixOp: '+' .

    $default  reduce using rule 103 (PrefixOp)


State 59

  104 PrefixOp: '-' .

    $default  reduce using rule 104 (PrefixOp)


State 60

  101 PrefixOp: '!' .

    $default  reduce using rule 101 (PrefixOp)


State 61

  102 PrefixOp: '~' .

    $default  reduce using rule 102 (PrefixOp)


State 62

  115 Epr: ArrExp .

    $default  reduce using rule 115 (Epr)


State 63

  110 Expr: PrefixOp . Epr
  113     | PrefixOp . Epr PostfixOp

    T_NUM  shift, and go to state 55
    T_ID   shift, and go to state 56
    '('    shift, and go to state 57

    ArrExp  go to state 62
    Epr     go to state 75


State 64

   49 VarDec: Type T_ID '=' Expression . DecIdenList ';'

    ','  shift, and go to state 45

    $default  reduce using rule 53 (DecIdenList)

    DecIdenList  go to state 76


State 65

  107 Expression: Expr .
  108           | Expr . InfixOp Expression
  109           | Expr . InfixOp1 Expression

    T_OROR        shift, and go to state 77
    T_ANDAND      shift, and go to state 78
    T_EQCOMP      shift, and go to state 79
    T_NOTEQUAL    shift, and go to state 80
    T_GREATEREQ   shift, and go to state 81
    T_LESSEREQ    shift, and go to state 82
    T_LEFTSHIFT   shift, and go to state 83
    T_RIGHTSHIFT  shift, and go to state 84
    '*'           shift, and go to state 85
    '|'           shift, and go to state 86
    '^'           shift, and go to state 87
    '&'           shift, and go to state 88
    '+'           shift, and go to state 89
    '-'           shift, and go to state 90
    '/'           shift, and go to state 91
    '%'           shift, and go to state 92
    '<'           shift, and go to state 93
    '>'           shift, and go to state 94

    $default  reduce using rule 107 (Expression)

    InfixOp   go to state 95
    InfixOp1  go to state 96


State 66

  111 Expr: Epr .
  112     | Epr . PostfixOp

    T_INC  shift, and go to state 97
    T_DEC  shift, and go to state 98

    $default  reduce using rule 111 (Expr)

    PostfixOp  go to state 99


State 67

   50 VarDec: Type T_ID DecIdenList ';' .

    $default  reduce using rule 50 (VarDec)


State 68

   10 MethodDec: Modifier T_VOID T_ID '(' Params ')' . Block

    '{'  shift, and go to state 100

    Block  go to state 101


State 69

   20 ParamList: Type T_ID .
   21          | Type T_ID . ',' Params

    ','  shift, and go to state 102

    $default  reduce using rule 20 (ParamList)


State 70

    9 MethodDec: Modifier Type T_ID '(' Params ')' . Block

    '{'  shift, and go to state 100

    Block  go to state 103


State 71

   51 DecIdenList: ',' T_ID '=' . Expression DecIdenList

    T_INC  shift, and go to state 53
    T_DEC  shift, and go to state 54
    T_NUM  shift, and go to state 55
    T_ID   shift, and go to state 56
    '('    shift, and go to state 57
    '+'    shift, and go to state 58
    '-'    shift, and go to state 59
    '!'    shift, and go to state 60
    '~'    shift, and go to state 61

    ArrExp      go to state 62
    PrefixOp    go to state 63
    Expression  go to state 104
    Expr        go to state 65
    Epr         go to state 66


State 72

   52 DecIdenList: ',' T_ID DecIdenList .

    $default  reduce using rule 52 (DecIdenList)


State 73

   65 ArrExp: T_ID '[' . Expression ']'
   66       | T_ID '[' . Expression ']' '[' Expression ']'

    T_INC  shift, and go to state 53
    T_DEC  shift, and go to state 54
    T_NUM  shift, and go to state 55
    T_ID   shift, and go to state 56
    '('    shift, and go to state 57
    '+'    shift, and go to state 58
    '-'    shift, and go to state 59
    '!'    shift, and go to state 60
    '~'    shift, and go to state 61

    ArrExp      go to state 62
    PrefixOp    go to state 63
    Expression  go to state 105
    Expr        go to state 65
    Epr         go to state 66


State 74

  114 Epr: '(' Expression . ')'

    ')'  shift, and go to state 106


State 75

  110 Expr: PrefixOp Epr .
  113     | PrefixOp Epr . PostfixOp

    T_INC  shift, and go to state 97
    T_DEC  shift, and go to state 98

    $default  reduce using rule 110 (Expr)

    PostfixOp  go to state 107


State 76

   49 VarDec: Type T_ID '=' Expression DecIdenList . ';'

    ';'  shift, and go to state 108


State 77

   89 InfixOp1: T_OROR .

    $default  reduce using rule 89 (InfixOp1)


State 78

   90 InfixOp1: T_ANDAND .

    $default  reduce using rule 90 (InfixOp1)


State 79

   91 InfixOp1: T_EQCOMP .

    $default  reduce using rule 91 (InfixOp1)


State 80

   92 InfixOp1: T_NOTEQUAL .

    $default  reduce using rule 92 (InfixOp1)


State 81

   96 InfixOp1: T_GREATEREQ .

    $default  reduce using rule 96 (InfixOp1)


State 82

   95 InfixOp1: T_LESSEREQ .

    $default  reduce using rule 95 (InfixOp1)


State 83

   97 InfixOp1: T_LEFTSHIFT .

    $default  reduce using rule 97 (InfixOp1)


State 84

   98 InfixOp1: T_RIGHTSHIFT .

    $default  reduce using rule 98 (InfixOp1)


State 85

   86 InfixOp: '*' .

    $default  reduce using rule 86 (InfixOp)


State 86

   81 InfixOp: '|' .

    $default  reduce using rule 81 (InfixOp)


State 87

   82 InfixOp: '^' .

    $default  reduce using rule 82 (InfixOp)


State 88

   83 InfixOp: '&' .

    $default  reduce using rule 83 (InfixOp)


State 89

   84 InfixOp: '+' .

    $default  reduce using rule 84 (InfixOp)


State 90

   85 InfixOp: '-' .

    $default  reduce using rule 85 (InfixOp)


State 91

   87 InfixOp: '/' .

    $default  reduce using rule 87 (InfixOp)


State 92

   88 InfixOp: '%' .

    $default  reduce using rule 88 (InfixOp)


State 93

   93 InfixOp1: '<' .

    $default  reduce using rule 93 (InfixOp1)


State 94

   94 InfixOp1: '>' .

    $default  reduce using rule 94 (InfixOp1)


State 95

  108 Expression: Expr InfixOp . Expression

    T_INC  shift, and go to state 53
    T_DEC  shift, and go to state 54
    T_NUM  shift, and go to state 55
    T_ID   shift, and go to state 56
    '('    shift, and go to state 57
    '+'    shift, and go to state 58
    '-'    shift, and go to state 59
    '!'    shift, and go to state 60
    '~'    shift, and go to state 61

    ArrExp      go to state 62
    PrefixOp    go to state 63
    Expression  go to state 109
    Expr        go to state 65
    Epr         go to state 66


State 96

  109 Expression: Expr InfixOp1 . Expression

    T_INC  shift, and go to state 53
    T_DEC  shift, and go to state 54
    T_NUM  shift, and go to state 55
    T_ID   shift, and go to state 56
    '('    shift, and go to state 57
    '+'    shift, and go to state 58
    '-'    shift, and go to state 59
    '!'    shift, and go to state 60
    '~'    shift, and go to state 61

    ArrExp      go to state 62
    PrefixOp    go to state 63
    Expression  go to state 110
    Expr        go to state 65
    Epr         go to state 66


State 97

  105 PostfixOp: T_INC .

    $default  reduce using rule 105 (PostfixOp)


State 98

  106 PostfixOp: T_DEC .

    $default  reduce using rule 106 (PostfixOp)


State 99

  112 Expr: Epr PostfixOp .

    $default  reduce using rule 112 (Expr)


State 100

   23 Block: '{' . Statement '}'

    T_INT       shift, and go to state 35
    T_CHAR      shift, and go to state 36
    T_DOUBLE    shift, and go to state 37
    T_FOR       shift, and go to state 111
    T_SWITCH    shift, and go to state 112
    T_BREAK     shift, and go to state 113
    T_CONTINUE  shift, and go to state 114
    T_RETURN    shift, and go to state 115
    T_ID        shift, and go to state 116

    $default  reduce using rule 42 (Statement)

    Statement  go to state 117
    VarDec     go to state 118
    ArrDec     go to state 119
    ArrInit    go to state 120
    ArrExp     go to state 121
    Type       go to state 122
    Assign     go to state 123


State 101

   10 MethodDec: Modifier T_VOID T_ID '(' Params ')' Block .

    $default  reduce using rule 10 (MethodDec)


State 102

   21 ParamList: Type T_ID ',' . Params

    T_INT     shift, and go to state 35
    T_CHAR    shift, and go to state 36
    T_DOUBLE  shift, and go to state 37

    $default  reduce using rule 22 (ParamList)

    Params     go to state 124
    ParamList  go to state 49
    Type       go to state 50


State 103

    9 MethodDec: Modifier Type T_ID '(' Params ')' Block .

    $default  reduce using rule 9 (MethodDec)


State 104

   51 DecIdenList: ',' T_ID '=' Expression . DecIdenList

    ','  shift, and go to state 45

    $default  reduce using rule 53 (DecIdenList)

    DecIdenList  go to state 125


State 105

   65 ArrExp: T_ID '[' Expression . ']'
   66       | T_ID '[' Expression . ']' '[' Expression ']'

    ']'  shift, and go to state 126


State 106

  114 Epr: '(' Expression ')' .

    $default  reduce using rule 114 (Epr)


State 107

  113 Expr: PrefixOp Epr PostfixOp .

    $default  reduce using rule 113 (Expr)


State 108

   49 VarDec: Type T_ID '=' Expression DecIdenList ';' .

    $default  reduce using rule 49 (VarDec)


State 109

  108 Expression: Expr InfixOp Expression .

    $default  reduce using rule 108 (Expression)


State 110

  109 Expression: Expr InfixOp1 Expression .

    $default  reduce using rule 109 (Expression)


State 111

   34 Statement: T_FOR . '(' $@3 VarDec $@4 Expression $@5 ';' Expression $@6 ')' Block $@7 Statement

    '('  shift, and go to state 127


State 112

   38 Statement: T_SWITCH . '(' Expression $@8 ')' '{' SwitchBlock '}' $@9 Statement

    '('  shift, and go to state 128


State 113

   26 Statement: T_BREAK . ';' $@1 Statement

    ';'  shift, and go to state 129


State 114

   28 Statement: T_CONTINUE . ';' $@2 Statement

    ';'  shift, and go to state 130


State 115

   35 Statement: T_RETURN . Expression ';' Statement

    T_INC  shift, and go to state 53
    T_DEC  shift, and go to state 54
    T_NUM  shift, and go to state 55
    T_ID   shift, and go to state 56
    '('    shift, and go to state 57
    '+'    shift, and go to state 58
    '-'    shift, and go to state 59
    '!'    shift, and go to state 60
    '~'    shift, and go to state 61

    ArrExp      go to state 62
    PrefixOp    go to state 63
    Expression  go to state 131
    Expr        go to state 65
    Epr         go to state 66


State 116

   55 ArrDec: T_ID . '[' ']' '[' ']' ArrList
   56       | T_ID . ArrList
   65 ArrExp: T_ID . '[' Expression ']'
   66       | T_ID . '[' Expression ']' '[' Expression ']'
   67       | T_ID .

    ','  shift, and go to state 132
    '['  shift, and go to state 133

    T_SHORTHANDADD  reduce using rule 67 (ArrExp)
    T_SHORTHANDSUB  reduce using rule 67 (ArrExp)
    T_SHORTHANDMUL  reduce using rule 67 (ArrExp)
    T_SHORTHANDDIV  reduce using rule 67 (ArrExp)
    T_SHORTHANDAND  reduce using rule 67 (ArrExp)
    T_SHORTHANDORE  reduce using rule 67 (ArrExp)
    T_SHORTHANDCAR  reduce using rule 67 (ArrExp)
    T_SHORTHANDMOD  reduce using rule 67 (ArrExp)
    '='             reduce using rule 67 (ArrExp)
    $default        reduce using rule 60 (ArrList)

    ArrList  go to state 134


State 117

   23 Block: '{' Statement . '}'

    '}'  shift, and go to state 135


State 118

   39 Statement: VarDec . Statement

    T_INT       shift, and go to state 35
    T_CHAR      shift, and go to state 36
    T_DOUBLE    shift, and go to state 37
    T_FOR       shift, and go to state 111
    T_SWITCH    shift, and go to state 112
    T_BREAK     shift, and go to state 113
    T_CONTINUE  shift, and go to state 114
    T_RETURN    shift, and go to state 115
    T_ID        shift, and go to state 116

    $default  reduce using rule 42 (Statement)

    Statement  go to state 136
    VarDec     go to state 118
    ArrDec     go to state 119
    ArrInit    go to state 120
    ArrExp     go to state 121
    Type       go to state 122
    Assign     go to state 123


State 119

   40 Statement: ArrDec . Statement

    T_INT       shift, and go to state 35
    T_CHAR      shift, and go to state 36
    T_DOUBLE    shift, and go to state 37
    T_FOR       shift, and go to state 111
    T_SWITCH    shift, and go to state 112
    T_BREAK     shift, and go to state 113
    T_CONTINUE  shift, and go to state 114
    T_RETURN    shift, and go to state 115
    T_ID        shift, and go to state 116

    $default  reduce using rule 42 (Statement)

    Statement  go to state 137
    VarDec     go to state 118
    ArrDec     go to state 119
    ArrInit    go to state 120
    ArrExp     go to state 121
    Type       go to state 122
    Assign     go to state 123


State 120

   41 Statement: ArrInit . Statement

    T_INT       shift, and go to state 35
    T_CHAR      shift, and go to state 36
    T_DOUBLE    shift, and go to state 37
    T_FOR       shift, and go to state 111
    T_SWITCH    shift, and go to state 112
    T_BREAK     shift, and go to state 113
    T_CONTINUE  shift, and go to state 114
    T_RETURN    shift, and go to state 115
    T_ID        shift, and go to state 116

    $default  reduce using rule 42 (Statement)

    Statement  go to state 138
    VarDec     go to state 118
    ArrDec     go to state 119
    ArrInit    go to state 120
    ArrExp     go to state 121
    Type       go to state 122
    Assign     go to state 123


State 121

   71 Assign: ArrExp . AssignOp Expression ';'

    T_SHORTHANDADD  shift, and go to state 139
    T_SHORTHANDSUB  shift, and go to state 140
    T_SHORTHANDMUL  shift, and go to state 141
    T_SHORTHANDDIV  shift, and go to state 142
    T_SHORTHANDAND  shift, and go to state 143
    T_SHORTHANDORE  shift, and go to state 144
    T_SHORTHANDCAR  shift, and go to state 145
    T_SHORTHANDMOD  shift, and go to state 146
    '='             shift, and go to state 147

    AssignOp  go to state 148


State 122

   49 VarDec: Type . T_ID '=' Expression DecIdenList ';'
   50       | Type . T_ID DecIdenList ';'
   54 ArrDec: Type . T_ID '[' ']' ArrList ';'
   61 ArrInit: Type . T_ID '[' ']' '=' T_NEW Type '[' Expression ']' ';'
   62        | Type . T_ID '[' ']' '[' ']' '=' T_NEW Type '[' Expression ']' '[' Expression ']' ';'
   63        | Type . '[' ']' T_ID '=' T_NEW Type '[' Expression ']' ';'
   64        | Type . '[' ']' '[' ']' T_ID '=' T_NEW Type '[' Expression ']' '[' Expression ']' ';'

    T_ID  shift, and go to state 149
    '['   shift, and go to state 150


State 123

   24 Statement: Assign . Statement

    T_INT       shift, and go to state 35
    T_CHAR      shift, and go to state 36
    T_DOUBLE    shift, and go to state 37
    T_FOR       shift, and go to state 111
    T_SWITCH    shift, and go to state 112
    T_BREAK     shift, and go to state 113
    T_CONTINUE  shift, and go to state 114
    T_RETURN    shift, and go to state 115
    T_ID        shift, and go to state 116

    $default  reduce using rule 42 (Statement)

    Statement  go to state 151
    VarDec     go to state 118
    ArrDec     go to state 119
    ArrInit    go to state 120
    ArrExp     go to state 121
    Type       go to state 122
    Assign     go to state 123


State 124

   21 ParamList: Type T_ID ',' Params .

    $default  reduce using rule 21 (ParamList)


State 125

   51 DecIdenList: ',' T_ID '=' Expression DecIdenList .

    $default  reduce using rule 51 (DecIdenList)


State 126

   65 ArrExp: T_ID '[' Expression ']' .
   66       | T_ID '[' Expression ']' . '[' Expression ']'

    '['  shift, and go to state 152

    $default  reduce using rule 65 (ArrExp)


State 127

   34 Statement: T_FOR '(' . $@3 VarDec $@4 Expression $@5 ';' Expression $@6 ')' Block $@7 Statement

    $default  reduce using rule 29 ($@3)

    $@3  go to state 153


State 128

   38 Statement: T_SWITCH '(' . Expression $@8 ')' '{' SwitchBlock '}' $@9 Statement

    T_INC  shift, and go to state 53
    T_DEC  shift, and go to state 54
    T_NUM  shift, and go to state 55
    T_ID   shift, and go to state 56
    '('    shift, and go to state 57
    '+'    shift, and go to state 58
    '-'    shift, and go to state 59
    '!'    shift, and go to state 60
    '~'    shift, and go to state 61

    ArrExp      go to state 62
    PrefixOp    go to state 63
    Expression  go to state 154
    Expr        go to state 65
    Epr         go to state 66


State 129

   26 Statement: T_BREAK ';' . $@1 Statement

    $default  reduce using rule 25 ($@1)

    $@1  go to state 155


State 130

   28 Statement: T_CONTINUE ';' . $@2 Statement

    $default  reduce using rule 27 ($@2)

    $@2  go to state 156


State 131

   35 Statement: T_RETURN Expression . ';' Statement

    ';'  shift, and go to state 157


State 132

   57 ArrList: ',' . T_ID '[' ']'
   58        | ',' . T_ID '[' ']' '[' ']'
   59        | ',' . T_ID

    T_ID  shift, and go to state 158


State 133

   55 ArrDec: T_ID '[' . ']' '[' ']' ArrList
   65 ArrExp: T_ID '[' . Expression ']'
   66       | T_ID '[' . Expression ']' '[' Expression ']'

    T_INC  shift, and go to state 53
    T_DEC  shift, and go to state 54
    T_NUM  shift, and go to state 55
    T_ID   shift, and go to state 56
    '('    shift, and go to state 57
    ']'    shift, and go to state 159
    '+'    shift, and go to state 58
    '-'    shift, and go to state 59
    '!'    shift, and go to state 60
    '~'    shift, and go to state 61

    ArrExp      go to state 62
    PrefixOp    go to state 63
    Expression  go to state 105
    Expr        go to state 65
    Epr         go to state 66


State 134

   56 ArrDec: T_ID ArrList .

    $default  reduce using rule 56 (ArrDec)


State 135

   23 Block: '{' Statement '}' .

    $default  reduce using rule 23 (Block)


State 136

   39 Statement: VarDec Statement .

    $default  reduce using rule 39 (Statement)


State 137

   40 Statement: ArrDec Statement .

    $default  reduce using rule 40 (Statement)


State 138

   41 Statement: ArrInit Statement .

    $default  reduce using rule 41 (Statement)


State 139

   73 AssignOp: T_SHORTHANDADD .

    $default  reduce using rule 73 (AssignOp)


State 140

   74 AssignOp: T_SHORTHANDSUB .

    $default  reduce using rule 74 (AssignOp)


State 141

   75 AssignOp: T_SHORTHANDMUL .

    $default  reduce using rule 75 (AssignOp)


State 142

   76 AssignOp: T_SHORTHANDDIV .

    $default  reduce using rule 76 (AssignOp)


State 143

   77 AssignOp: T_SHORTHANDAND .

    $default  reduce using rule 77 (AssignOp)


State 144

   78 AssignOp: T_SHORTHANDORE .

    $default  reduce using rule 78 (AssignOp)


State 145

   79 AssignOp: T_SHORTHANDCAR .

    $default  reduce using rule 79 (AssignOp)


State 146

   80 AssignOp: T_SHORTHANDMOD .

    $default  reduce using rule 80 (AssignOp)


State 147

   72 AssignOp: '=' .

    $default  reduce using rule 72 (AssignOp)


State 148

   71 Assign: ArrExp AssignOp . Expression ';'

    T_INC  shift, and go to state 53
    T_DEC  shift, and go to state 54
    T_NUM  shift, and go to state 55
    T_ID   shift, and go to state 56
    '('    shift, and go to state 57
    '+'    shift, and go to state 58
    '-'    shift, and go to state 59
    '!'    shift, and go to state 60
    '~'    shift, and go to state 61

    ArrExp      go to state 62
    PrefixOp    go to state 63
    Expression  go to state 160
    Expr        go to state 65
    Epr         go to state 66


State 149

   49 VarDec: Type T_ID . '=' Expression DecIdenList ';'
   50       | Type T_ID . DecIdenList ';'
   54 ArrDec: Type T_ID . '[' ']' ArrList ';'
   61 ArrInit: Type T_ID . '[' ']' '=' T_NEW Type '[' Expression ']' ';'
   62        | Type T_ID . '[' ']' '[' ']' '=' T_NEW Type '[' Expression ']' '[' Expression ']' ';'

    ','  shift, and go to state 45
    '='  shift, and go to state 46
    '['  shift, and go to state 161

    $default  reduce using rule 53 (DecIdenList)

    DecIdenList  go to state 47


State 150

   63 ArrInit: Type '[' . ']' T_ID '=' T_NEW Type '[' Expression ']' ';'
   64        | Type '[' . ']' '[' ']' T_ID '=' T_NEW Type '[' Expression ']' '[' Expression ']' ';'

    ']'  shift, and go to state 162


State 151

   24 Statement: Assign Statement .

    $default  reduce using rule 24 (Statement)


State 152

   66 ArrExp: T_ID '[' Expression ']' '[' . Expression ']'

    T_INC  shift, and go to state 53
    T_DEC  shift, and go to state 54
    T_NUM  shift, and go to state 55
    T_ID   shift, and go to state 56
    '('    shift, and go to state 57
    '+'    shift, and go to state 58
    '-'    shift, and go to state 59
    '!'    shift, and go to state 60
    '~'    shift, and go to state 61

    ArrExp      go to state 62
    PrefixOp    go to state 63
    Expression  go to state 163
    Expr        go to state 65
    Epr         go to state 66


State 153

   34 Statement: T_FOR '(' $@3 . VarDec $@4 Expression $@5 ';' Expression $@6 ')' Block $@7 Statement

    T_INT     shift, and go to state 35
    T_CHAR    shift, and go to state 36
    T_DOUBLE  shift, and go to state 37

    VarDec  go to state 164
    Type    go to state 165


State 154

   38 Statement: T_SWITCH '(' Expression . $@8 ')' '{' SwitchBlock '}' $@9 Statement

    $default  reduce using rule 36 ($@8)

    $@8  go to state 166


State 155

   26 Statement: T_BREAK ';' $@1 . Statement

    T_INT       shift, and go to state 35
    T_CHAR      shift, and go to state 36
    T_DOUBLE    shift, and go to state 37
    T_FOR       shift, and go to state 111
    T_SWITCH    shift, and go to state 112
    T_BREAK     shift, and go to state 113
    T_CONTINUE  shift, and go to state 114
    T_RETURN    shift, and go to state 115
    T_ID        shift, and go to state 116

    $default  reduce using rule 42 (Statement)

    Statement  go to state 167
    VarDec     go to state 118
    ArrDec     go to state 119
    ArrInit    go to state 120
    ArrExp     go to state 121
    Type       go to state 122
    Assign     go to state 123


State 156

   28 Statement: T_CONTINUE ';' $@2 . Statement

    T_INT       shift, and go to state 35
    T_CHAR      shift, and go to state 36
    T_DOUBLE    shift, and go to state 37
    T_FOR       shift, and go to state 111
    T_SWITCH    shift, and go to state 112
    T_BREAK     shift, and go to state 113
    T_CONTINUE  shift, and go to state 114
    T_RETURN    shift, and go to state 115
    T_ID        shift, and go to state 116

    $default  reduce using rule 42 (Statement)

    Statement  go to state 168
    VarDec     go to state 118
    ArrDec     go to state 119
    ArrInit    go to state 120
    ArrExp     go to state 121
    Type       go to state 122
    Assign     go to state 123


State 157

   35 Statement: T_RETURN Expression ';' . Statement

    T_INT       shift, and go to state 35
    T_CHAR      shift, and go to state 36
    T_DOUBLE    shift, and go to state 37
    T_FOR       shift, and go to state 111
    T_SWITCH    shift, and go to state 112
    T_BREAK     shift, and go to state 113
    T_CONTINUE  shift, and go to state 114
    T_RETURN    shift, and go to state 115
    T_ID        shift, and go to state 116

    $default  reduce using rule 42 (Statement)

    Statement  go to state 169
    VarDec     go to state 118
    ArrDec     go to state 119
    ArrInit    go to state 120
    ArrExp     go to state 121
    Type       go to state 122
    Assign     go to state 123


State 158

   57 ArrList: ',' T_ID . '[' ']'
   58        | ',' T_ID . '[' ']' '[' ']'
   59        | ',' T_ID .

    '['  shift, and go to state 170

    $default  reduce using rule 59 (ArrList)


State 159

   55 ArrDec: T_ID '[' ']' . '[' ']' ArrList

    '['  shift, and go to state 171


State 160

   71 Assign: ArrExp AssignOp Expression . ';'

    ';'  shift, and go to state 172


State 161

   54 ArrDec: Type T_ID '[' . ']' ArrList ';'
   61 ArrInit: Type T_ID '[' . ']' '=' T_NEW Type '[' Expression ']' ';'
   62        | Type T_ID '[' . ']' '[' ']' '=' T_NEW Type '[' Expression ']' '[' Expression ']' ';'

    ']'  shift, and go to state 173


State 162

   63 ArrInit: Type '[' ']' . T_ID '=' T_NEW Type '[' Expression ']' ';'
   64        | Type '[' ']' . '[' ']' T_ID '=' T_NEW Type '[' Expression ']' '[' Expression ']' ';'

    T_ID  shift, and go to state 174
    '['   shift, and go to state 175


State 163

   66 ArrExp: T_ID '[' Expression ']' '[' Expression . ']'

    ']'  shift, and go to state 176


State 164

   34 Statement: T_FOR '(' $@3 VarDec . $@4 Expression $@5 ';' Expression $@6 ')' Block $@7 Statement

    $default  reduce using rule 30 ($@4)

    $@4  go to state 177


State 165

   49 VarDec: Type . T_ID '=' Expression DecIdenList ';'
   50       | Type . T_ID DecIdenList ';'

    T_ID  shift, and go to state 178


State 166

   38 Statement: T_SWITCH '(' Expression $@8 . ')' '{' SwitchBlock '}' $@9 Statement

    ')'  shift, and go to state 179


State 167

   26 Statement: T_BREAK ';' $@1 Statement .

    $default  reduce using rule 26 (Statement)


State 168

   28 Statement: T_CONTINUE ';' $@2 Statement .

    $default  reduce using rule 28 (Statement)


State 169

   35 Statement: T_RETURN Expression ';' Statement .

    $default  reduce using rule 35 (Statement)


State 170

   57 ArrList: ',' T_ID '[' . ']'
   58        | ',' T_ID '[' . ']' '[' ']'

    ']'  shift, and go to state 180


State 171

   55 ArrDec: T_ID '[' ']' '[' . ']' ArrList

    ']'  shift, and go to state 181


State 172

   71 Assign: ArrExp AssignOp Expression ';' .

    $default  reduce using rule 71 (Assign)


State 173

   54 ArrDec: Type T_ID '[' ']' . ArrList ';'
   61 ArrInit: Type T_ID '[' ']' . '=' T_NEW Type '[' Expression ']' ';'
   62        | Type T_ID '[' ']' . '[' ']' '=' T_NEW Type '[' Expression ']' '[' Expression ']' ';'

    ','  shift, and go to state 132
    '='  shift, and go to state 182
    '['  shift, and go to state 183

    $default  reduce using rule 60 (ArrList)

    ArrList  go to state 184


State 174

   63 ArrInit: Type '[' ']' T_ID . '=' T_NEW Type '[' Expression ']' ';'

    '='  shift, and go to state 185


State 175

   64 ArrInit: Type '[' ']' '[' . ']' T_ID '=' T_NEW Type '[' Expression ']' '[' Expression ']' ';'

    ']'  shift, and go to state 186


State 176

   66 ArrExp: T_ID '[' Expression ']' '[' Expression ']' .

    $default  reduce using rule 66 (ArrExp)


State 177

   34 Statement: T_FOR '(' $@3 VarDec $@4 . Expression $@5 ';' Expression $@6 ')' Block $@7 Statement

    T_INC  shift, and go to state 53
    T_DEC  shift, and go to state 54
    T_NUM  shift, and go to state 55
    T_ID   shift, and go to state 56
    '('    shift, and go to state 57
    '+'    shift, and go to state 58
    '-'    shift, and go to state 59
    '!'    shift, and go to state 60
    '~'    shift, and go to state 61

    ArrExp      go to state 62
    PrefixOp    go to state 63
    Expression  go to state 187
    Expr        go to state 65
    Epr         go to state 66


State 178

   49 VarDec: Type T_ID . '=' Expression DecIdenList ';'
   50       | Type T_ID . DecIdenList ';'

    ','  shift, and go to state 45
    '='  shift, and go to state 46

    $default  reduce using rule 53 (DecIdenList)

    DecIdenList  go to state 47


State 179

   38 Statement: T_SWITCH '(' Expression $@8 ')' . '{' SwitchBlock '}' $@9 Statement

    '{'  shift, and go to state 188


State 180

   57 ArrList: ',' T_ID '[' ']' .
   58        | ',' T_ID '[' ']' . '[' ']'

    '['  shift, and go to state 189

    $default  reduce using rule 57 (ArrList)


State 181

   55 ArrDec: T_ID '[' ']' '[' ']' . ArrList

    ','  shift, and go to state 132

    $default  reduce using rule 60 (ArrList)

    ArrList  go to state 190


State 182

   61 ArrInit: Type T_ID '[' ']' '=' . T_NEW Type '[' Expression ']' ';'

    T_NEW  shift, and go to state 191


State 183

   62 ArrInit: Type T_ID '[' ']' '[' . ']' '=' T_NEW Type '[' Expression ']' '[' Expression ']' ';'

    ']'  shift, and go to state 192


State 184

   54 ArrDec: Type T_ID '[' ']' ArrList . ';'

    ';'  shift, and go to state 193


State 185

   63 ArrInit: Type '[' ']' T_ID '=' . T_NEW Type '[' Expression ']' ';'

    T_NEW  shift, and go to state 194


State 186

   64 ArrInit: Type '[' ']' '[' ']' . T_ID '=' T_NEW Type '[' Expression ']' '[' Expression ']' ';'

    T_ID  shift, and go to state 195


State 187

   34 Statement: T_FOR '(' $@3 VarDec $@4 Expression . $@5 ';' Expression $@6 ')' Block $@7 Statement

    $default  reduce using rule 31 ($@5)

    $@5  go to state 196


State 188

   38 Statement: T_SWITCH '(' Expression $@8 ')' '{' . SwitchBlock '}' $@9 Statement

    T_CASE     shift, and go to state 197
    T_DEFAULT  shift, and go to state 198

    $default  reduce using rule 46 (SwitchBlock)

    SwitchBlock  go to state 199
    SwitchLabel  go to state 200


State 189

   58 ArrList: ',' T_ID '[' ']' '[' . ']'

    ']'  shift, and go to state 201


State 190

   55 ArrDec: T_ID '[' ']' '[' ']' ArrList .

    $default  reduce using rule 55 (ArrDec)


State 191

   61 ArrInit: Type T_ID '[' ']' '=' T_NEW . Type '[' Expression ']' ';'

    T_INT     shift, and go to state 35
    T_CHAR    shift, and go to state 36
    T_DOUBLE  shift, and go to state 37

    Type  go to state 202


State 192

   62 ArrInit: Type T_ID '[' ']' '[' ']' . '=' T_NEW Type '[' Expression ']' '[' Expression ']' ';'

    '='  shift, and go to state 203


State 193

   54 ArrDec: Type T_ID '[' ']' ArrList ';' .

    $default  reduce using rule 54 (ArrDec)


State 194

   63 ArrInit: Type '[' ']' T_ID '=' T_NEW . Type '[' Expression ']' ';'

    T_INT     shift, and go to state 35
    T_CHAR    shift, and go to state 36
    T_DOUBLE  shift, and go to state 37

    Type  go to state 204


State 195

   64 ArrInit: Type '[' ']' '[' ']' T_ID . '=' T_NEW Type '[' Expression ']' '[' Expression ']' ';'

    '='  shift, and go to state 205


State 196

   34 Statement: T_FOR '(' $@3 VarDec $@4 Expression $@5 . ';' Expression $@6 ')' Block $@7 Statement

    ';'  shift, and go to state 206


State 197

   47 SwitchLabel: T_CASE . Expression

    T_INC  shift, and go to state 53
    T_DEC  shift, and go to state 54
    T_NUM  shift, and go to state 55
    T_ID   shift, and go to state 56
    '('    shift, and go to state 57
    '+'    shift, and go to state 58
    '-'    shift, and go to state 59
    '!'    shift, and go to state 60
    '~'    shift, and go to state 61

    ArrExp      go to state 62
    PrefixOp    go to state 63
    Expression  go to state 207
    Expr        go to state 65
    Epr         go to state 66


State 198

   48 SwitchLabel: T_DEFAULT .

    $default  reduce using rule 48 (SwitchLabel)


State 199

   38 Statement: T_SWITCH '(' Expression $@8 ')' '{' SwitchBlock . '}' $@9 Statement

    '}'  shift, and go to state 208


State 200

   45 SwitchBlock: SwitchLabel . @10 ':' Statement $@11 SwitchBlock

    $default  reduce using rule 43 (@10)

    @10  go to state 209


State 201

   58 ArrList: ',' T_ID '[' ']' '[' ']' .

    $default  reduce using rule 58 (ArrList)


State 202

   61 ArrInit: Type T_ID '[' ']' '=' T_NEW Type . '[' Expression ']' ';'

    '['  shift, and go to state 210


State 203

   62 ArrInit: Type T_ID '[' ']' '[' ']' '=' . T_NEW Type '[' Expression ']' '[' Expression ']' ';'

    T_NEW  shift, and go to state 211


State 204

   63 ArrInit: Type '[' ']' T_ID '=' T_NEW Type . '[' Expression ']' ';'

    '['  shift, and go to state 212


State 205

   64 ArrInit: Type '[' ']' '[' ']' T_ID '=' . T_NEW Type '[' Expression ']' '[' Expression ']' ';'

    T_NEW  shift, and go to state 213


State 206

   34 Statement: T_FOR '(' $@3 VarDec $@4 Expression $@5 ';' . Expression $@6 ')' Block $@7 Statement

    T_INC  shift, and go to state 53
    T_DEC  shift, and go to state 54
    T_NUM  shift, and go to state 55
    T_ID   shift, and go to state 56
    '('    shift, and go to state 57
    '+'    shift, and go to state 58
    '-'    shift, and go to state 59
    '!'    shift, and go to state 60
    '~'    shift, and go to state 61

    ArrExp      go to state 62
    PrefixOp    go to state 63
    Expression  go to state 214
    Expr        go to state 65
    Epr         go to state 66


State 207

   47 SwitchLabel: T_CASE Expression .

    $default  reduce using rule 47 (SwitchLabel)


State 208

   38 Statement: T_SWITCH '(' Expression $@8 ')' '{' SwitchBlock '}' . $@9 Statement

    $default  reduce using rule 37 ($@9)

    $@9  go to state 215


State 209

   45 SwitchBlock: SwitchLabel @10 . ':' Statement $@11 SwitchBlock

    ':'  shift, and go to state 216


State 210

   61 ArrInit: Type T_ID '[' ']' '=' T_NEW Type '[' . Expression ']' ';'

    T_INC  shift, and go to state 53
    T_DEC  shift, and go to state 54
    T_NUM  shift, and go to state 55
    T_ID   shift, and go to state 56
    '('    shift, and go to state 57
    '+'    shift, and go to state 58
    '-'    shift, and go to state 59
    '!'    shift, and go to state 60
    '~'    shift, and go to state 61

    ArrExp      go to state 62
    PrefixOp    go to state 63
    Expression  go to state 217
    Expr        go to state 65
    Epr         go to state 66


State 211

   62 ArrInit: Type T_ID '[' ']' '[' ']' '=' T_NEW . Type '[' Expression ']' '[' Expression ']' ';'

    T_INT     shift, and go to state 35
    T_CHAR    shift, and go to state 36
    T_DOUBLE  shift, and go to state 37

    Type  go to state 218


State 212

   63 ArrInit: Type '[' ']' T_ID '=' T_NEW Type '[' . Expression ']' ';'

    T_INC  shift, and go to state 53
    T_DEC  shift, and go to state 54
    T_NUM  shift, and go to state 55
    T_ID   shift, and go to state 56
    '('    shift, and go to state 57
    '+'    shift, and go to state 58
    '-'    shift, and go to state 59
    '!'    shift, and go to state 60
    '~'    shift, and go to state 61

    ArrExp      go to state 62
    PrefixOp    go to state 63
    Expression  go to state 219
    Expr        go to state 65
    Epr         go to state 66


State 213

   64 ArrInit: Type '[' ']' '[' ']' T_ID '=' T_NEW . Type '[' Expression ']' '[' Expression ']' ';'

    T_INT     shift, and go to state 35
    T_CHAR    shift, and go to state 36
    T_DOUBLE  shift, and go to state 37

    Type  go to state 220


State 214

   34 Statement: T_FOR '(' $@3 VarDec $@4 Expression $@5 ';' Expression . $@6 ')' Block $@7 Statement

    $default  reduce using rule 32 ($@6)

    $@6  go to state 221


State 215

   38 Statement: T_SWITCH '(' Expression $@8 ')' '{' SwitchBlock '}' $@9 . Statement

    T_INT       shift, and go to state 35
    T_CHAR      shift, and go to state 36
    T_DOUBLE    shift, and go to state 37
    T_FOR       shift, and go to state 111
    T_SWITCH    shift, and go to state 112
    T_BREAK     shift, and go to state 113
    T_CONTINUE  shift, and go to state 114
    T_RETURN    shift, and go to state 115
    T_ID        shift, and go to state 116

    $default  reduce using rule 42 (Statement)

    Statement  go to state 222
    VarDec     go to state 118
    ArrDec     go to state 119
    ArrInit    go to state 120
    ArrExp     go to state 121
    Type       go to state 122
    Assign     go to state 123


State 216

   45 SwitchBlock: SwitchLabel @10 ':' . Statement $@11 SwitchBlock

    T_INT       shift, and go to state 35
    T_CHAR      shift, and go to state 36
    T_DOUBLE    shift, and go to state 37
    T_FOR       shift, and go to state 111
    T_SWITCH    shift, and go to state 112
    T_BREAK     shift, and go to state 113
    T_CONTINUE  shift, and go to state 114
    T_RETURN    shift, and go to state 115
    T_ID        shift, and go to state 116

    $default  reduce using rule 42 (Statement)

    Statement  go to state 223
    VarDec     go to state 118
    ArrDec     go to state 119
    ArrInit    go to state 120
    ArrExp     go to state 121
    Type       go to state 122
    Assign     go to state 123


State 217

   61 ArrInit: Type T_ID '[' ']' '=' T_NEW Type '[' Expression . ']' ';'

    ']'  shift, and go to state 224


State 218

   62 ArrInit: Type T_ID '[' ']' '[' ']' '=' T_NEW Type . '[' Expression ']' '[' Expression ']' ';'

    '['  shift, and go to state 225


State 219

   63 ArrInit: Type '[' ']' T_ID '=' T_NEW Type '[' Expression . ']' ';'

    ']'  shift, and go to state 226


State 220

   64 ArrInit: Type '[' ']' '[' ']' T_ID '=' T_NEW Type . '[' Expression ']' '[' Expression ']' ';'

    '['  shift, and go to state 227


State 221

   34 Statement: T_FOR '(' $@3 VarDec $@4 Expression $@5 ';' Expression $@6 . ')' Block $@7 Statement

    ')'  shift, and go to state 228


State 222

   38 Statement: T_SWITCH '(' Expression $@8 ')' '{' SwitchBlock '}' $@9 Statement .

    $default  reduce using rule 38 (Statement)


State 223

   45 SwitchBlock: SwitchLabel @10 ':' Statement . $@11 SwitchBlock

    $default  reduce using rule 44 ($@11)

    $@11  go to state 229


State 224

   61 ArrInit: Type T_ID '[' ']' '=' T_NEW Type '[' Expression ']' . ';'

    ';'  shift, and go to state 230


State 225

   62 ArrInit: Type T_ID '[' ']' '[' ']' '=' T_NEW Type '[' . Expression ']' '[' Expression ']' ';'

    T_INC  shift, and go to state 53
    T_DEC  shift, and go to state 54
    T_NUM  shift, and go to state 55
    T_ID   shift, and go to state 56
    '('    shift, and go to state 57
    '+'    shift, and go to state 58
    '-'    shift, and go to state 59
    '!'    shift, and go to state 60
    '~'    shift, and go to state 61

    ArrExp      go to state 62
    PrefixOp    go to state 63
    Expression  go to state 231
    Expr        go to state 65
    Epr         go to state 66


State 226

   63 ArrInit: Type '[' ']' T_ID '=' T_NEW Type '[' Expression ']' . ';'

    ';'  shift, and go to state 232


State 227

   64 ArrInit: Type '[' ']' '[' ']' T_ID '=' T_NEW Type '[' . Expression ']' '[' Expression ']' ';'

    T_INC  shift, and go to state 53
    T_DEC  shift, and go to state 54
    T_NUM  shift, and go to state 55
    T_ID   shift, and go to state 56
    '('    shift, and go to state 57
    '+'    shift, and go to state 58
    '-'    shift, and go to state 59
    '!'    shift, and go to state 60
    '~'    shift, and go to state 61

    ArrExp      go to state 62
    PrefixOp    go to state 63
    Expression  go to state 233
    Expr        go to state 65
    Epr         go to state 66


State 228

   34 Statement: T_FOR '(' $@3 VarDec $@4 Expression $@5 ';' Expression $@6 ')' . Block $@7 Statement

    '{'  shift, and go to state 100

    Block  go to state 234


State 229

   45 SwitchBlock: SwitchLabel @10 ':' Statement $@11 . SwitchBlock

    T_CASE     shift, and go to state 197
    T_DEFAULT  shift, and go to state 198

    $default  reduce using rule 46 (SwitchBlock)

    SwitchBlock  go to state 235
    SwitchLabel  go to state 200


State 230

   61 ArrInit: Type T_ID '[' ']' '=' T_NEW Type '[' Expression ']' ';' .

    $default  reduce using rule 61 (ArrInit)


State 231

   62 ArrInit: Type T_ID '[' ']' '[' ']' '=' T_NEW Type '[' Expression . ']' '[' Expression ']' ';'

    ']'  shift, and go to state 236


State 232

   63 ArrInit: Type '[' ']' T_ID '=' T_NEW Type '[' Expression ']' ';' .

    $default  reduce using rule 63 (ArrInit)


State 233

   64 ArrInit: Type '[' ']' '[' ']' T_ID '=' T_NEW Type '[' Expression . ']' '[' Expression ']' ';'

    ']'  shift, and go to state 237


State 234

   34 Statement: T_FOR '(' $@3 VarDec $@4 Expression $@5 ';' Expression $@6 ')' Block . $@7 Statement

    $default  reduce using rule 33 ($@7)

    $@7  go to state 238


State 235

   45 SwitchBlock: SwitchLabel @10 ':' Statement $@11 SwitchBlock .

    $default  reduce using rule 45 (SwitchBlock)


State 236

   62 ArrInit: Type T_ID '[' ']' '[' ']' '=' T_NEW Type '[' Expression ']' . '[' Expression ']' ';'

    '['  shift, and go to state 239


State 237

   64 ArrInit: Type '[' ']' '[' ']' T_ID '=' T_NEW Type '[' Expression ']' . '[' Expression ']' ';'

    '['  shift, and go to state 240


State 238

   34 Statement: T_FOR '(' $@3 VarDec $@4 Expression $@5 ';' Expression $@6 ')' Block $@7 . Statement

    T_INT       shift, and go to state 35
    T_CHAR      shift, and go to state 36
    T_DOUBLE    shift, and go to state 37
    T_FOR       shift, and go to state 111
    T_SWITCH    shift, and go to state 112
    T_BREAK     shift, and go to state 113
    T_CONTINUE  shift, and go to state 114
    T_RETURN    shift, and go to state 115
    T_ID        shift, and go to state 116

    $default  reduce using rule 42 (Statement)

    Statement  go to state 241
    VarDec     go to state 118
    ArrDec     go to state 119
    ArrInit    go to state 120
    ArrExp     go to state 121
    Type       go to state 122
    Assign     go to state 123


State 239

   62 ArrInit: Type T_ID '[' ']' '[' ']' '=' T_NEW Type '[' Expression ']' '[' . Expression ']' ';'

    T_INC  shift, and go to state 53
    T_DEC  shift, and go to state 54
    T_NUM  shift, and go to state 55
    T_ID   shift, and go to state 56
    '('    shift, and go to state 57
    '+'    shift, and go to state 58
    '-'    shift, and go to state 59
    '!'    shift, and go to state 60
    '~'    shift, and go to state 61

    ArrExp      go to state 62
    PrefixOp    go to state 63
    Expression  go to state 242
    Expr        go to state 65
    Epr         go to state 66


State 240

   64 ArrInit: Type '[' ']' '[' ']' T_ID '=' T_NEW Type '[' Expression ']' '[' . Expression ']' ';'

    T_INC  shift, and go to state 53
    T_DEC  shift, and go to state 54
    T_NUM  shift, and go to state 55
    T_ID   shift, and go to state 56
    '('    shift, and go to state 57
    '+'    shift, and go to state 58
    '-'    shift, and go to state 59
    '!'    shift, and go to state 60
    '~'    shift, and go to state 61

    ArrExp      go to state 62
    PrefixOp    go to state 63
    Expression  go to state 243
    Expr        go to state 65
    Epr         go to state 66


State 241

   34 Statement: T_FOR '(' $@3 VarDec $@4 Expression $@5 ';' Expression $@6 ')' Block $@7 Statement .

    $default  reduce using rule 34 (Statement)


State 242

   62 ArrInit: Type T_ID '[' ']' '[' ']' '=' T_NEW Type '[' Expression ']' '[' Expression . ']' ';'

    ']'  shift, and go to state 244


State 243

   64 ArrInit: Type '[' ']' '[' ']' T_ID '=' T_NEW Type '[' Expression ']' '[' Expression . ']' ';'

    ']'  shift, and go to state 245


State 244

   62 ArrInit: Type T_ID '[' ']' '[' ']' '=' T_NEW Type '[' Expression ']' '[' Expression ']' . ';'

    ';'  shift, and go to state 246


State 245

   64 ArrInit: Type '[' ']' '[' ']' T_ID '=' T_NEW Type '[' Expression ']' '[' Expression ']' . ';'

    ';'  shift, and go to state 247


State 246

   62 ArrInit: Type T_ID '[' ']' '[' ']' '=' T_NEW Type '[' Expression ']' '[' Expression ']' ';' .

    $default  reduce using rule 62 (ArrInit)


State 247

   64 ArrInit: Type '[' ']' '[' ']' T_ID '=' T_NEW Type '[' Expression ']' '[' Expression ']' ';' .

    $default  reduce using rule 64 (ArrInit)
